{"index.js":"function checkCashRegister(price, cash, cid) {\nlet onhand = 0;\nlet drawer = [];\nlet denomSupply = [];\nlet denom_val = [.01, .05, .1, .25, 1, 5, 10, 20, 100];\nlet currency = ['PENNY', 'NICKEL', 'DIME','QUARTER', 'ONE', 'FIVE','TEN', 'TWENTY', 'ONE HUNDRED'];\nlet change = cash - price;\nlet give = [];\nlet iter = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n\nfor (let i = 8; i >= 0; i--) {\n  onhand += cid[i][1];\n  drawer.push(cid[i][1]);\n  denomSupply.push(Math.round(cid[i][1] / denom_val[i]));\n}\n\ndenom_val.reverse();\ncurrency.reverse();\n\nfor (let j = 0; j < denom_val.length; j++) {\n  while (denom_val[j] <= change && denomSupply[j] > 0) {\n    denomSupply[j]--;\n    iter[j]++;\n    drawer[j] = denomSupply[j] * denom_val[j];\n    onhand = drawer.reduce((a, b) => a + b).toFixed(2);\n    change -= (denom_val[j]);\n    change = change.toFixed(2)\n  }\ngive.push([currency[j], (iter[j] * denom_val[j])]);\n}\n\n\n\nreturn onhand < change || change > 0 ? {status: \"INSUFFICIENT_FUNDS\", change: []} : \n       onhand === change ? {status: \"CLOSED\", change: give.reverse()} :\n        {status: \"OPEN\", change: give.filter((denom) => denom[1])};\n\n}\n\n\nconsole.log(checkCashRegister(19.5, 20, [[\"PENNY\", .5], [\"NICKEL\", 0], [\"DIME\", 0], [\"QUARTER\", 0], [\"ONE\", 0], [\"FIVE\", 0], [\"TEN\", 0], [\"TWENTY\", 0], [\"ONE HUNDRED\", 0]]));"}